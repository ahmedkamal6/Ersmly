import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { preview } from "../assets";
import { getRandomPrompt } from "../utils";
import { FormField, Loader } from "../Components";
import { useDispatch, useSelector } from "react-redux";
import {
  changeName,
  changePrompt,
  getImage,
  submit,
} from "../Redux/generateImageSlice";
import { useEffect } from "react";
const CreatePost = () => {
  const navigate = useNavigate();
  const dispatch = useDispatch();
  const { generatingImg, loading, prompt, photo } = useSelector(
    (state) => state.generateImage
  );
  const {name,userid} = useSelector((state) => state.login);
  const handleSurpriseMe = () => {
    const randomPrompt = getRandomPrompt(prompt);
    dispatch(changePrompt(randomPrompt));
  };
  const generateImage = async () => {
    if (prompt) {
      dispatch(getImage(prompt));
    } else {
      alert("press enter a prompt");
    }
  };
  const handleSubmit = async (e) => {
    e.preventDefault();
    if (prompt && photo) {
      dispatch(submit({ name, prompt, photo, userid })).then(() => navigate("/"));
    } else {
      alert("please enter a prompt");
    }
  };
  useEffect(()=>{
    if(!JSON.parse(localStorage.getItem("loggedUserName")))
      navigate('/login')
  },[])
  return (
    <section className="max-w-7xl mx-auto">
      <div>
        <h1 className="font-extrabold text-[#222328] text-[32px]">Create</h1>
        <p className="mt-2 text-[#666e75] text-[16px] max-w-[500px]">
          Create imaginative and visually stunning images generated by our Image
          Generator and share them with the community
        </p>
      </div>
      <form className="mt-16 max-w-3xl" onSubmit={handleSubmit}>
        <div className="flex flex-col gap-5">
          <FormField
            label="Prompt"
            type="text"
            name="prompt"
            placeholder="A plush toy robot sitting against a yellow wall"
            value={prompt}
            handleChange={(e) => dispatch(changePrompt(e.target.value))}
            isSurpriseMe
            handleSurpriseMe={handleSurpriseMe}
          />
          <div
            className="relative bg-gray-50 border broder-gray-300 text-gray-900
          text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 w-64 p-3 h-64 flex justify-center items-center"
          >
            {photo ? (
              <img
                src={photo}
                alt={prompt}
                className="w-full h-full object-contain"
              />
            ) : (
              <img
                src={preview}
                alt="preview"
                className="w-9/12 h-9/12 object-contain opacity-40 "
              />
            )}
            {generatingImg && (
              <div className=" absolute inset-0 z-0 flex justify-center items-center bg-[rgba(0,0,0,0.5)] rounded-lg">
                <Loader />
              </div>
            )}
          </div>
        </div>
        <div className="mt-5 flex gap-5">
          <button
            type="button"
            onClick={generateImage}
            className="text-white bg-green-700 font-medium rounded-md text-sm w-full  px-5 py-2.5 text-center disabled:opacity-75"
            disabled={generatingImg || loading}
          >
            {generatingImg ? "Generating..." : "Generate"}
          </button>
        </div>
        <div className="mt-10">
          <p className="mt-2 text-[#666e75] text-[14px]">
            Once you have created the image u want , u can share it with the
            community
          </p>
          <button
            type="submit"
            className="mt-3 text-white bg-[#6469ff] font-medium rounded-md text-sm w-full px-5 py-2.5 text-center disabled:opacity-75"
            disabled={loading}
          >
            {loading ? "Sharing" : "Share with the community"}
          </button>
        </div>
      </form>
    </section>
  );
};

export default CreatePost;
